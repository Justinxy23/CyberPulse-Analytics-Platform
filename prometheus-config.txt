# CyberPulse Analytics Platform - Prometheus Configuration
# Author: Justin Christopher Weaver
# Description: Comprehensive monitoring setup for security operations

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    monitor: 'cyberpulse-monitor'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
            - alertmanager:9093

# Load rules files
rule_files:
  - "security_rules.yml"
  - "performance_rules.yml"
  - "compliance_rules.yml"

# Scrape configurations
scrape_configs:
  # CyberPulse API metrics
  - job_name: 'cyberpulse-api'
    metrics_path: '/metrics'
    static_configs:
      - targets: ['api:8080']
        labels:
          service: 'api'
          team: 'security'
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
        regex: '([^:]+).*'
        replacement: '${1}'

  # Node Exporter for system metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: 
          - 'node-exporter:9100'
          - 'node-exporter-db:9100'
          - 'node-exporter-cache:9100'
        labels:
          team: 'infrastructure'

  # PostgreSQL Exporter
  - job_name: 'postgres'
    static_configs:
      - targets: ['postgres-exporter:9187']
        labels:
          service: 'database'
          db_name: 'cyberpulse'

  # Redis Exporter
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
        labels:
          service: 'cache'

  # Elasticsearch Exporter
  - job_name: 'elasticsearch'
    static_configs:
      - targets: ['elasticsearch-exporter:9114']
        labels:
          service: 'search'
          cluster: 'cyberpulse-logs'

  # Blackbox Exporter for endpoint monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
          - https://api.cyberpulse.io/health
          - https://cyberpulse.io
          - https://dashboard.cyberpulse.io
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

  # Docker containers monitoring
  - job_name: 'cadvisor'
    static_configs:
      - targets: ['cadvisor:8080']
        labels:
          service: 'containers'

  # Kubernetes metrics (if deployed on K8s)
  - job_name: 'kubernetes-apiservers'
    kubernetes_sd_configs:
      - role: endpoints
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
        action: keep
        regex: default;kubernetes;https

  - job_name: 'kubernetes-nodes'
    kubernetes_sd_configs:
      - role: node
    scheme: https
    tls_config:
      ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
    bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
    relabel_configs:
      - action: labelmap
        regex: __meta_kubernetes_node_label_(.+)

  - job_name: 'kubernetes-pods'
    kubernetes_sd_configs:
      - role: pod
    relabel_configs:
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
        action: keep
        regex: true
      - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
        action: replace
        target_label: __metrics_path__
        regex: (.+)
      - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
        action: replace
        regex: ([^:]+)(?::\d+)?;(\d+)
        replacement: $1:$2
        target_label: __address__
      - action: labelmap
        regex: __meta_kubernetes_pod_label_(.+)
      - source_labels: [__meta_kubernetes_namespace]
        action: replace
        target_label: kubernetes_namespace
      - source_labels: [__meta_kubernetes_pod_name]
        action: replace
        target_label: kubernetes_pod_name

  # Custom Security Metrics
  - job_name: 'security-scanner'
    static_configs:
      - targets: ['security-scanner:9200']
        labels:
          service: 'security-scanner'
          scanner_type: 'vulnerability'
    metric_relabel_configs:
      - source_labels: [__name__]
        regex: 'scanner_vulnerabilities_.*'
        action: keep

  # Firewall metrics
  - job_name: 'firewall-exporter'
    static_configs:
      - targets: 
          - 'paloalto-exporter:9201'
          - 'checkpoint-exporter:9202'
          - 'fortinet-exporter:9203'
        labels:
          service: 'firewall'
    relabel_configs:
      - source_labels: [__address__]
        regex: '(.+)-exporter.*'
        target_label: firewall_vendor
        replacement: '${1}'

  # SIEM Integration
  - job_name: 'siem-metrics'
    static_configs:
      - targets: ['splunk-exporter:9204']
        labels:
          service: 'siem'
          platform: 'splunk'

  # Cloud Provider Metrics
  - job_name: 'aws-cloudwatch'
    ec2_sd_configs:
      - region: us-east-1
        access_key: '<AWS_ACCESS_KEY>'
        secret_key: '<AWS_SECRET_KEY>'
        port: 9100
    relabel_configs:
      - source_labels: [__meta_ec2_tag_Name]
        target_label: instance
      - source_labels: [__meta_ec2_instance_type]
        target_label: instance_type
      - source_labels: [__meta_ec2_availability_zone]
        target_label: availability_zone

  # Application Performance Monitoring
  - job_name: 'apm-traces'
    static_configs:
      - targets: ['jaeger-query:16686']
        labels:
          service: 'tracing'

# Remote write configuration for long-term storage
remote_write:
  - url: 'http://cortex:9009/api/v1/push'
    queue_config:
      capacity: 10000
      max_shards: 200
      min_shards: 1
      max_samples_per_send: 5000
      batch_send_deadline: 5s
      min_backoff: 30ms
      max_backoff: 100ms

# Remote read configuration
remote_read:
  - url: 'http://cortex:9009/api/v1/read'
    read_recent: true

# Service discovery for dynamic environments
service_discovery:
  # Consul integration
  - job_name: 'consul-services'
    consul_sd_configs:
      - server: 'consul:8500'
        services: []
    relabel_configs:
      - source_labels: [__meta_consul_service]
        target_label: service
      - source_labels: [__meta_consul_node]
        target_label: node
      - source_labels: [__meta_consul_tags]
        target_label: tags

  # DNS service discovery
  - job_name: 'dns-sd'
    dns_sd_configs:
      - names:
          - '_prometheus._tcp.cyberpulse.local'
        type: 'SRV'
        refresh_interval: 30s

# Custom metrics aggregation rules
metric_relabel_configs:
  - source_labels: [__name__]
    regex: 'go_.*'
    action: drop
  - source_labels: [__name__]
    regex: 'process_.*'
    action: drop

# Storage configuration
storage:
  tsdb:
    path: /prometheus
    retention:
      time: 30d
      size: 50GB
    wal_compression: true

# Feature flags
feature_flags:
  enable_exemplar_storage: true
  enable_memory_snapshot_on_shutdown: true